on:
    workflow_call:
        inputs:
            path:
                required: true
                type: string

jobs:
    compile:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Compile Package
              run: |
                  ./scripts/helpers/compile-service.sh -c -p ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    audit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Audit Dependencies
              run: |
                  ./scripts/helpers/npm-all.sh -c audit -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    format:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Run formatters
              run: |
                  npx prettier --check ${{ inputs.path }}
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run linters
              run: |
                  ./node_modules/.bin/eslint ${{ inputs.path }} --max-warnings 0 --ext .js,.jsx,.ts,.tsx
                  ./node_modules/.bin/npmPkgJsonLint ${{ inputs.path }}
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Unit Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose --group=-integration
    integration-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "14"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Setup DynamoDB local
              uses: rrainn/dynamodb-action@v2.0.1
              with:
                  port: 8000
                  cors: "*"
            - name: Run Integration Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose --group=integration
