on:
    workflow_call:
        inputs:
            service_cache_key:
                required: true
                type: string
            path:
                required: true
                type: string
            deploy_script_path:
                required: true
                type: string
        secrets:
            deploy_role:
                required: true

jobs:
    changed:
        runs-on: ubuntu-latest
        outputs:
            service: ${{ steps.filter.outputs.service }}
        steps:
            - uses: actions/checkout@v2
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: master
                  filters: |
                      service:
                          - ${{ inputs.path }}/**
    compile:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Compile Package
              run: |
                  ./scripts/helpers/compile-service.sh -c -p ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    audit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Audit Dependencies
              run: |
                  ./scripts/helpers/npm-all.sh -c "audit --audit-level=high" -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    format:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Run formatters
              run: |
                  npx prettier --check ${{ inputs.path }}
    lint:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run linters
              run: |
                  ./node_modules/.bin/eslint ${{ inputs.path }} --max-warnings 0 --ext .js,.jsx,.ts,.tsx
                  ./node_modules/.bin/npmPkgJsonLint ${{ inputs.path }}
    validate:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: scottbrenner/cfn-lint-action@v2
            - name: Validate Templates
              run: |
                  xargs -n1 -r0a <(find ${{ inputs.path }} -name *-template.yml -print0) cfn-lint
    unit-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Unit Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose --group=-integration
    integration-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.service == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  ./scripts/helpers/npm-all.sh -c ci -r ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Setup DynamoDB local
              uses: rrainn/dynamodb-action@v2.0.1
              with:
                  port: 8000
                  cors: "*"
            - name: Run Integration Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose --group=integration
    deploy:
        runs-on: ubuntu-latest
        needs:
            [
                compile,
                audit,
                format,
                lint,
                validate,
                unit-test,
                integration-test,
            ]
        if: ${{ github.ref == 'refs/heads/master' }}
        permissions:
            id-token: write
            contents: read
            packages: read
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - uses: aws-actions/setup-sam@v1
            - uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.deploy_role }}
            - name: Cache deployment packages
              uses: actions/cache@v2
              env:
                  cache-name: cache-deployment-packages
              with:
                  path: |
                      .aws-sam/cache/**
                      .aws-sam/build.toml
                  key: ${{ runner.os }}-deploy-${{ inputs.service_cache_key }}-v1-${{ env.cache-name }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-deploy-${{ inputs.service_cache_key }}-v1-${{ env.cache-name }}-
            - name: Deploy stack
              run: |
                  ${{ inputs.deploy_script_path }} -e production
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
