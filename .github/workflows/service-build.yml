on:
    workflow_call:
        inputs:
            service_cache_key:
                required: true
                type: string
            path:
                required: true
                type: string
            deploy_script_path:
                required: true
                type: string
            service_name:
                required: true
                type: string
            dryrun:
                required: true
                type: boolean
            changed:
                required: true
                type: boolean
        secrets:
            deploy_role:
                required: true

jobs:
    compile:
        runs-on: ubuntu-latest
        if: ${{ !inputs.dryrun && inputs.changed }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.service_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path), './package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.service_cache_key }}-
            - name: Compile Package
              run: |
                  ./scripts/helpers/compile-service.sh -c -p ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    deploy-dryrun:
        runs-on: ubuntu-latest
        if: ${{ inputs.dryrun && inputs.changed  }}
        permissions:
            id-token: write
            contents: read
            packages: read
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.8"
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - uses: aws-actions/setup-sam@v2
            - name: Fix SAM Cryptography
              run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"
            - uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.deploy_role }}
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.service_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path), './package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.service_cache_key }}-
            - name: Cache deployment packages
              uses: actions/cache@v3
              with:
                  path: |
                      .aws-sam/cache/**
                      .aws-sam/deps/**
                      .aws-sam/build.toml
                  key: ${{ runner.os }}-deploy-${{ inputs.service_cache_key }}-v1-${{ env.deployment_cache_name }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-deploy-${{ inputs.service_cache_key }}-v1-${{ env.deployment_cache_name }}-
            - name: Dry Run Deployment
              id: dry-run
              run: |
                  ./scripts/helpers/write-changeset-to-file.sh -c "${{ inputs.deploy_script_path }} -e production -d" \
                    -f $GITHUB_OUTPUT \
                    -v CHANGESET_OUTPUT \
                    -d EOF
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            CHANGESET_OUTPUT: ${{ steps.dry-run.outputs.CHANGESET_OUTPUT }}
    add-changeset-comment:
        runs-on: ubuntu-latest
        needs: deploy-dryrun
        if: ${{ github.event_name == 'pull_request' && needs.deploy-dryrun.outputs.CHANGESET_OUTPUT != '' }}
        steps:
            - uses: actions/checkout@v3
            - name: Find Comment
              uses: peter-evans/find-comment@v2
              id: find-comment
              with:
                  issue-number: ${{ github.event.pull_request.number }}
                  comment-author: "github-actions[bot]"
                  body-includes: ${{ inputs.service_name }}
            - name: Create Multiline changeset YAML variable for template
              run: |
                  ./scripts/helpers/multiline-string-to-yml.sh -k changeset \
                    -v "${{ needs.deploy-dryrun.outputs.CHANGESET_OUTPUT }}" \
                    -o ./template_vars.yml
            - name: Create comment template
              uses: chuhlomin/render-template@v1.6
              id: template
              with:
                  template: .github/comment_template/changeset-template.md
                  vars: |
                      service_name: "${{ inputs.service_name }}"
                  vars_path: ./template_vars.yml
            - name: Create or update comment
              uses: peter-evans/create-or-update-comment@v2
              with:
                  comment-id: ${{ steps.find-comment.outputs.comment-id }}
                  issue-number: ${{ github.event.pull_request.number }}
                  body: ${{ steps.template.outputs.result }}
                  edit-mode: replace
