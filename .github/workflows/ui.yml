on:
    workflow_call:
        inputs:
            path:
                required: true
                type: string
        secrets:
            DEPLOY_ROLE:
                required: true

jobs:
    changed:
        runs-on: ubuntu-latest
        outputs:
            ui: ${{ steps.filter.outputs.ui }}
        steps:
            - uses: actions/checkout@v3
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: master
                  filters: |
                      ui:
                        - ${{ inputs.path }}/**
                        - ./.github/workflows/ui.yml
                        - ./scripts/deploy-ui.sh
    build:
        uses: ./.github/workflows/ui-build.yml
        needs: changed
        with:
            path: ${{ inputs.path }}
            dryrun: ${{ github.actor != 'dependabot[bot]' }}
            changed: ${{ needs.changed.outputs.ui == 'true' }}
        secrets:
            DEPLOY_ROLE: ${{ secrets.DEPLOY_ROLE }}
    format:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Run formatters
              run: |
                  npx prettier@^2.5.1 --check ${{ inputs.path }}
    lint:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./ui/node_modules
                  key: ${{ runner.os }}-node-v1-ui-${{ hashFiles('./package-lock.json', './ui/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-ui-
            - name: Install Dependencies
              run: |
                  npm --prefix ${{ inputs.path }} run ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run linters
              run: |
                  ./node_modules/.bin/eslint ${{ inputs.path }} --max-warnings 0 --ext .js,.jsx,.ts,.tsx
                  ./node_modules/.bin/npmPkgJsonLint ${{ inputs.path }}
    unit-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - uses: SimenB/github-actions-cpu-cores@v1
              id: cpu-cores
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./ui/node_modules
                  key: ${{ runner.os }}-node-v1-ui-${{ hashFiles('./package-lock.json', './ui/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-ui-
            - name: Install Dependencies
              run: |
                  npm --prefix ${{ inputs.path }} run ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Unit Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose --max-workers ${{ steps.cpu-cores.outputs.count }}
    browser-component-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./ui/node_modules
                  key: ${{ runner.os }}-node-v1-ui-${{ hashFiles('./package-lock.json', './ui/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-ui-
            - name: Install Dependencies
              run: |
                  npm --prefix ${{ inputs.path }} run ci
                  npx playwright install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Browser Component Tests
              env:
                  NODE_OPTIONS: "--max_old_space_size=4096"
              run: |
                  npm --prefix ${{ inputs.path }} run test-ct
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: snapshot-failures
                  path: ${{ inputs.path }}/**/test-results/*
                  if-no-files-found: ignore
                  retention-days: 5
    deploy:
        runs-on: ubuntu-latest
        needs: [build, format, lint, unit-test, browser-component-test]
        if: ${{ github.ref == 'refs/heads/master' }}
        permissions:
            id-token: write
            contents: read
            packages: read
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: "3.8"
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - uses: aws-actions/setup-sam@v2
            - name: Fix SAM Cryptography
              run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"
            - uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.DEPLOY_ROLE }}
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ./node_modules
                      ./ui/node_modules
                  key: ${{ runner.os }}-node-v1-ui-${{ hashFiles('./package-lock.json', './ui/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-ui-
            - name: Deploy stack
              run: |
                  ./scripts/deploy-ui.sh -e production -f -c
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
