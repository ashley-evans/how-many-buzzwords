on:
    workflow_call:
        inputs:
            path:
                required: true
                type: string
        secrets:
            DEPLOY_ROLE:
                required: true
            REGION:
                required: true
            CRAWL_SERVICE_GRAPHQL_ENDPOINT:
                required: true
            CRAWL_IDENTITY_POOL_ID:
                required: true
            KEYPHRASE_SERVICE_WS_ENDPOINT:
                required: true

jobs:
    changed:
        runs-on: ubuntu-latest
        outputs:
            ui: ${{ steps.filter.outputs.ui }}
        steps:
            - uses: actions/checkout@v2
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: master
                  filters: |
                      ui:
                        - ${{ inputs.path }}/**
                        - ./.github/workflows/ui.yml
    audit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Audit Dependencies
              run: |
                  npm audit --audit-level=high --prefix ${{ inputs.path }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    build:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install dependencies
              run: |
                  npm ci
                  npm --prefix ${{ inputs.path }} ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Build UI
              run: |
                  npm --prefix ${{ inputs.path }} run build
    format:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Run formatters
              run: |
                  npx prettier --check ${{ inputs.path }}
    lint:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  npm --prefix ${{ inputs.path }} ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run linters
              run: |
                  ./node_modules/.bin/eslint ${{ inputs.path }} --max-warnings 0 --ext .js,.jsx,.ts,.tsx
                  ./node_modules/.bin/npmPkgJsonLint ${{ inputs.path }}
    unit-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  npm --prefix ${{ inputs.path }} ci
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Unit Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose
    browser-component-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.ui == 'true' }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Install Dependencies
              run: |
                  npm ci
                  npm --prefix ${{ inputs.path }} ci
                  npx playwright install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Run Browser Component Tests
              run: |
                  npm --prefix ${{ inputs.path }} run test-ct
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: snapshot-failures
                  path: ${{ inputs.path }}/**/test-results/*
    deploy:
        runs-on: ubuntu-latest
        needs: [audit, build, format, lint, unit-test, browser-component-test]
        if: ${{ github.ref == 'refs/heads/master' }}
        permissions:
            id-token: write
            contents: read
            packages: read
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - uses: aws-actions/setup-sam@v1
            - uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: eu-west-2
                  role-to-assume: ${{ secrets.DEPLOY_ROLE }}
            - name: Create production envfile
              uses: SpicyPizza/create-envfile@v1.3
              with:
                  envkey_REGION: ${{ secrets.REGION }}
                  envkey_CRAWL_SERVICE_GRAPHQL_ENDPOINT: ${{ secrets.CRAWL_SERVICE_GRAPHQL_ENDPOINT }}
                  envkey_CRAWL_IDENTITY_POOL_ID: ${{ secrets.CRAWL_IDENTITY_POOL_ID }}
                  envkey_KEYPHRASE_WS_SERVICE_ENDPOINT: ${{ secrets.KEYPHRASE_SERVICE_WS_ENDPOINT }}
                  directory: ${{ inputs.path }}
                  file_name: .env
                  fail_on_empty: true
            - name: Deploy stack
              run: |
                  ./scripts/deploy-ui.sh -e production -f -c
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
