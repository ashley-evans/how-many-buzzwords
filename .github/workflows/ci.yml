name: Validate and Deploy
on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Compile Project
        run: |
          npm run compile:clean
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Dependencies
        run: |
          npm run ci
      - name: Run Unit Tests
        run: |
          npm run test
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: scottbrenner/cfn-lint-action@v2
      - name: Validate Templates
        run: |
          xargs -n1 -r0a <(find -name *-template.yml -print0) cfn-lint
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Dependencies
        run: |
          npm run ci
      - name: Run linters
        run: |
          npm run lint
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Audit Dependencies
        run: |
          npm run audit
  deploy-crawl-service:
    runs-on: ubuntu-latest
    needs: [compile, test, validate, lint, audit]
    if: ${{ github.ref == 'refs/heads/master' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
      - name: Deploy S3 Dependency Bucket
        run: |
          ./scripts/deploy-dependency-bucket.sh
      - name: Compile Project
        run: |
          npm run compile:clean
      - name: Cache deployment packages
        uses: actions/cache@v2
        env:
          cache-name: cache-deployment-packages
        with:
          path: |
            .aws-sam/cache/**
            .aws-sam/build.toml
          key: ${{ runner.os }}-deploy-crawl-service-v1-${{ env.cache-name }}-${{ hashFiles('./services/crawl/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deploy-crawl-service-v1-${{ env.cache-name }}-
      - name: Deploy stack
        run: |
          ./scripts/deploy-crawl-service.sh -e production
  deploy-keyphrase-service:
    runs-on: ubuntu-latest
    needs: [deploy-crawl-service]
    if: ${{ github.ref == 'refs/heads/master' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
      - name: Deploy S3 Dependency Bucket
        run: |
          ./scripts/deploy-dependency-bucket.sh
      - name: Compile Project
        run: |
          npm run compile:clean
      - name: Cache deployment packages
        uses: actions/cache@v2
        env:
          cache-name: cache-deployment-packages
        with:
          path: |
            .aws-sam/cache/**
            .aws-sam/build.toml
          key: ${{ runner.os }}-deploy-keyphrase-service-v1-${{ env.cache-name }}-${{ hashFiles('./services/keyphrase/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deploy-keyphrase-service-v1-${{ env.cache-name }}-
      - name: Deploy stack
        run: |
          ./scripts/deploy-keyphrase-service.sh -e production
  deploy-buzzword-stack:
    runs-on: ubuntu-latest
    needs: [deploy-keyphrase-service]
    if: ${{ github.ref == 'refs/heads/master' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
      - name: Deploy S3 Dependency Bucket
        run: |
          ./scripts/deploy-dependency-bucket.sh
      - name: Compile Project
        run: |
          npm run compile:clean
      - name: Cache deployment packages
        uses: actions/cache@v2
        env:
          cache-name: cache-deployment-packages
        with:
          path: |
            .aws-sam/cache/**
            .aws-sam/build.toml
          key: ${{ runner.os }}-deploy-buzzword-stack-v1-${{ env.cache-name }}-${{ hashFiles('./applications/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deploy-buzzword-stack-v1-${{ env.cache-name }}-
      - name: Deploy stack
        run: |
          ./scripts/deploy-buzzword-stack.sh -e production
