on:
    workflow_call:
        inputs:
            path:
                required: true
                type: string
            node_cache_key:
                required: true
                type: string

jobs:
    changed:
        runs-on: ubuntu-latest
        outputs:
            package: ${{ steps.filter.outputs.package }}
        steps:
            - uses: actions/checkout@v3
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  base: master
                  filters: |
                      package:
                          - ${{ inputs.path }}/**
                          - ./.github/workflows/package.yml
    compile:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.package == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-
            - name: Compile Package
              run: |
                  ./scripts/helpers/compile-package.sh -c -p ${{ inputs.path }}
    audit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Audit Dependencies
              run: |
                  npm audit --prefix ${{ inputs.path }}
    format:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.package == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Run formatters
              run: |
                  npx prettier --check ${{ inputs.path }}
    lint:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.package == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-
            - name: Install Dependencies
              run: |
                  package_name=$(jq -r ".name" ${{ inputs.path }}/package.json)
                  npx lerna bootstrap --scope "{how-many-buzzwords,$package_name}"
            - name: Run linters
              run: |
                  ./node_modules/.bin/eslint ${{ inputs.path }} --max-warnings 0 --ext .js,.jsx,.ts,.tsx
                  ./node_modules/.bin/npmPkgJsonLint ${{ inputs.path }}
    unit-test:
        runs-on: ubuntu-latest
        needs: changed
        if: ${{ needs.changed.outputs.package == 'true' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-
            - name: Install Dependencies
              run: |
                  package_name=$(jq -r ".name" ${{ inputs.path }}/package.json)
                  npx lerna bootstrap --scope "{how-many-buzzwords,$package_name}"
            - name: Run Unit Tests
              run: |
                  ./node_modules/.bin/jest --testPathPattern=${{ inputs.path }} --verbose
    publish:
        runs-on: ubuntu-latest
        needs: [compile, audit, format, lint, unit-test]
        if: ${{ github.ref == 'refs/heads/master' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  scope: "@ashley-evans"
                  registry-url: "https://npm.pkg.github.com"
            - name: Cache Node Dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ inputs.path }}/**/node_modules
                  key: ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.path)) }}
                  restore-keys: |
                      ${{ runner.os }}-node-v1-${{ inputs.node_cache_key }}-
            - name: Compile Package
              run: |
                  ./scripts/helpers/compile-package.sh -c -p ${{ inputs.path }}
            - name: Publish Package
              run: |
                  ./scripts/publish-package.sh -p ./dist
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
