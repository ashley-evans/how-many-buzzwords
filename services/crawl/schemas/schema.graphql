scalar AWSDateTime

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Query {
    urls(id: ID!): URL
}

interface Node {
    id: ID!
}

type URL implements Node {
    id: ID!
    pathnames: [Pathname]!
}

type Pathname {
    name: String!
    crawledAt: AWSDateTime!
}

type Mutation {
    startCrawl(input: StartCrawlInput!): StartCrawlOutput!
    updateCrawlStatus(id: ID!, status: CrawlStatus): CrawlStatusUpdate @aws_iam
}

input StartCrawlInput {
    url: String!
    depth: Int
}

type StartCrawlOutput {
    started: Boolean!
}

type CrawlStatusUpdate {
    id: ID!
    status: CrawlStatus!
}

type Subscription {
    crawlStatusUpdated(url: ID!): CrawlStatusUpdate
        @aws_subscribe(mutations: ["updateCrawlStatus"])
}

enum CrawlStatus {
    STARTED
    COMPLETE
}
